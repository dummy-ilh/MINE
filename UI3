import streamlit as st
import pandas as pd

# Initial Data
todo_list = ["Reply to manager's email", "Update project document", "Send meeting invites", "Review the budget"]
recently_completed = []

# Setup session state to hold the list items across reruns
if 'todo' not in st.session_state:
    st.session_state.todo = todo_list
if 'completed' not in st.session_state:
    st.session_state.completed = recently_completed

# CSS Styling for light grey background and multi-column layout
st.markdown(
    """
    <style>
    .container {
        background-color: #f7f7f7;
        padding: 20px;
        border-radius: 10px;
        margin: 10px 0;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }
    .header-title {
        color: #4CAF50;
        font-size: 28px;
        font-weight: bold;
        text-align: center;
    }
    .todo-container {
        background-color: #e0e0e0;
        padding: 20px;
        border-radius: 10px;
    }
    .todo-widget {
        background-color: #f7f7f7;
        padding: 20px;
        border-radius: 10px;
        margin-bottom: 20px;
    }
    .light-text {
        font-size: 18px;
        color: #424242;
    }
    </style>
    """, unsafe_allow_html=True
)

# Main Header
st.markdown("<h2 class='header-title'>Inbox Insight Dashboard</h2>", unsafe_allow_html=True)

# To-Do Widget Layout
st.markdown("<h3 class='light-text'>Task Management</h3>", unsafe_allow_html=True)
col1, col2 = st.columns(2)

# Display To-Do list on the left side
with col1:
    st.markdown("<div class='todo-widget'><h4>To-Do List</h4>", unsafe_allow_html=True)
    for i, task in enumerate(st.session_state.todo):
        if st.checkbox(task, key=f"todo_{i}"):
            # If task is checked, move it to recently completed
            st.session_state.completed.append(task)
            st.session_state.todo.remove(task)
    st.markdown("</div>", unsafe_allow_html=True)

# Display Recently Completed on the right side
with col2:
    st.markdown("<div class='todo-widget'><h4>Recently Completed</h4>", unsafe_allow_html=True)
    for i, task in enumerate(st.session_state.completed):
        if st.checkbox(task, key=f"completed_{i}", value=True):
            # If task is unchecked, move it back to the todo list
            st.session_state.todo.append(task)
            st.session_state.completed.remove(task)
    st.markdown("</div>", unsafe_allow_html=True)

# Summary of Task Movement
st.markdown("<div class='container'>", unsafe_allow_html=True)
st.write("You have", len(st.session_state.todo), "tasks remaining in your To-Do list.")
st.write("Recently completed:", len(st.session_state.completed), "tasks.")
st.markdown("</div>", unsafe_allow_html=True)
