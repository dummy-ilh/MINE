import streamlit as st
import pandas as pd
from langchain.llms import OpenAI
from langchain.prompts import PromptTemplate
from langchain.chains import LLMChain

# Initialize OpenAI LLM
openai_api_key = st.secrets["openai_api_key"]  # Assuming you store your API key in Streamlit secrets
llm = OpenAI(openai_api_key=openai_api_key)

# Define the LangChain Prompt Template
prompt_template = """
You are a data assistant working with a DataFrame containing {rows} rows and {columns} columns. 
The columns are: {column_names}.

Here are some sample rows: {sample_rows}

Based on this DataFrame, answer the following user question: {question}
"""

# Function to Query the DataFrame
def query_dataframe(df, question):
    rows = df.shape[0]
    columns = df.shape[1]
    column_names = ", ".join(df.columns)
    sample_rows = df.head().to_dict(orient='records')

    prompt = prompt_template.format(
        rows=rows,
        columns=columns,
        column_names=column_names,
        sample_rows=sample_rows,
        question=question
    )

    # Create LLMChain
    llm_chain = LLMChain(llm=llm, prompt=PromptTemplate.from_template(prompt))
    
    # Run the chain and get the response
    response = llm_chain.run({"question": question})
    return response


# Streamlit App UI
def main():
    st.title("LangChain-Powered DataFrame Q&A")

    # File uploader to load a CSV file
    uploaded_file = st.file_uploader("Upload your CSV file", type=["csv"])
    
    if uploaded_file is not None:
        # Load the CSV into a DataFrame
        df = pd.read_csv(uploaded_file)
        st.write("DataFrame Preview:")
        st.write(df.head())  # Show the first few rows of the DataFrame

        # User question input
        question = st.text_input("Ask a question about the data:")

        # If there's a question, run the LLM
        if question:
            with st.spinner("Processing..."):
                response = query_dataframe(df, question)
            st.write("Response:")
            st.write(response)

if __name__ == "__main__":
    main()
