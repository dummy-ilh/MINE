import pandas as pd

# Sample DataFrames (replace these with your actual DataFrames)
df1 = pd.DataFrame({'MessageID': [1, 2, 3, 2, 1, 3],
                    'text': ['Data1', 'Data2', 'Data3', 'Data2', 'Data1', 'Data3']})

df2 = pd.DataFrame({'MessageID': [3, 2, 1, 3, 1, 2, 3],
                    'text': ['Data1', 'Data2jfasjdba', 'Data1', 'sdsd Data2 ', 'DataE', 'DataF', 'DataG']})

# Create new DataFrames for matching and non-matching rows
matching_rows = []
non_matching_rows = []

# Iterate through each unique MessageID in df1
unique_message_ids_df1 = df1['MessageID'].unique()
for message_id in unique_message_ids_df1:
    df1_row = df1[df1['MessageID'] == message_id].iloc[0]  # Get the first row for the message_id
    matching_df2_rows = df2[df2['MessageID'] == message_id][df2['text'].str.contains(df1_row['text'])]
    
    if not matching_df2_rows.empty:
        matching_rows.extend(matching_df2_rows.values)
    else:
        non_matching_rows.append(df1_row.values)

# Check for unique message IDs in df1 that are not in df2
unique_message_ids_not_in_df2 = [message_id for message_id in unique_message_ids_df1 if message_id not in df2['MessageID'].unique()]
for message_id in unique_message_ids_not_in_df2:
    non_matching_rows.extend(df1[df1['MessageID'] == message_id].values)

# Create DataFrames from the collected rows
columns = df2.columns
matching_df = pd.DataFrame(matching_rows, columns=columns)
non_matching_df = pd.DataFrame(non_matching_rows, columns=df1.columns)

# Print or further process the new DataFrames
print("Matching Rows:")
print(matching_df)
print("\nNon-Matching Rows:")
print(non_matching_df)
