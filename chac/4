import pandas as pd
import re

def extract_email_details(email_text):
    email_data = {
        "From": None,
        "To": None,
        "Sent": None,
        "Subject": None,
        "Body": None,
        "Signature": None
    }
    
    # Case 1: Email starts with "From:"
    if email_text.strip().lower().startswith("from:"):
        from_match = re.search(r"From:\s*(.+?\.com>)", email_text, re.IGNORECASE)
        to_match = re.search(r"To:\s*(.+?\.com>)", email_text, re.IGNORECASE)
        sent_match = re.search(r"Sent:\s*(.+)", email_text, re.IGNORECASE)
        subject_match = re.search(r"Subject:\s*(.+)", email_text, re.IGNORECASE)
        
        email_data["From"] = from_match.group(1) if from_match else None
        email_data["To"] = to_match.group(1) if to_match else None
        email_data["Sent"] = sent_match.group(1).split("\n")[0] if sent_match else None
        email_data["Subject"] = subject_match.group(1).split("\n")[0] if subject_match else None
        
        # Extract body from subject onwards
        body_start = subject_match.end() if subject_match else 0
        body_text = email_text[body_start:]
        
    # Case 2: Email starts with "On ..." (Replies)
    elif email_text.strip().lower().startswith("on "):
        sent_match = re.search(r"On\s(.+?\s(?:AM|PM))", email_text, re.IGNORECASE)
        from_match = re.search(r"On\s.+?(?:AM|PM)\s(.+?\.com>)", email_text, re.IGNORECASE)
        
        email_data["Sent"] = sent_match.group(1) if sent_match else None
        email_data["From"] = from_match.group(1) if from_match else None
        
        # Extract body after "wrote:"
        body_start_match = re.search(r"wrote:\s*(.+)", email_text, re.IGNORECASE | re.DOTALL)
        body_text = body_start_match.group(1) if body_start_match else ""

    # Case 3: No "From:" or "On" â†’ Treat whole text as Body
    else:
        body_text = email_text

    # Extract Body, Signature, and Disclaimer
    signature_match = re.search(r"(Regards,|Thanks,)", body_text, re.IGNORECASE)
    if signature_match:
        body_end = signature_match.start()
        email_data["Body"] = body_text[:body_end].strip()
        email_data["Signature"] = body_text[body_end:].strip()
    else:
        email_data["Body"] = body_text.strip()

    return email_data

# Apply extraction function to DataFrame
df_extracted = df["Message content"].apply(extract_email_details).apply(pd.Series)

# Merge with original DataFrame
df = pd.concat([df, df_extracted], axis=1)

# Display extracted results
df[["From", "To", "Sent", "Subject", "Body", "Signature"]]
